<?xml version="1.0"?>

    <robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- <xacro:include filename="$(find mozov4sim4)/urdf/mozov4sim4.urdf.xacro"/> -->
      <!-- <xacro:include filename="$(find realsense2_description)/urdf/_d415.urdf.xacro" /> -->
<!-- =========================================motor driver========================================================= -->
        <gazebo>
        <plugin name="differential_drive_controller" filename="libdiff_p.so">

            <!-- Plugin update rate in Hz -->
            <updateRate>100</updateRate>

            <!-- Name of left joint, defaults to `left_joint` -->
            <leftJoint>Ljoint</leftJoint>

            <!-- Name of right joint, defaults to `right_joint` -->
            <rightJoint>Rjoint</rightJoint>
            <!-- #TODO this param needs to be set and tuned correctly -->
            <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
            <wheelSeparation>0.4</wheelSeparation>

            <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
            <wheelDiameter>0.1</wheelDiameter>

            <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
            <wheelAcceleration>2.0</wheelAcceleration>

            <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
            <wheelTorque>20</wheelTorque>

            <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
            <commandTopic>cmd_vel</commandTopic>

            <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
            <odometryTopic>odom</odometryTopic>

            <!-- Odometry frame, defaults to `odom` -->
            <odometryFrame>odom</odometryFrame>

            <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
            <robotBaseFrame>base_link</robotBaseFrame>

            <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
            <odometrySource>1</odometrySource>

            <!-- Set to true to publish transforms for the wheel links, defaults to false -->
            <publishWheelTF>false</publishWheelTF>

            <!-- Set to true to publish transforms for the odometry, defaults to true -->
            <publishOdom>true</publishOdom>

            <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
            <publishWheelJointState>true</publishWheelJointState>

            <!-- Set to true to swap right and left wheels, defaults to true -->
            <legacyMode>false</legacyMode>
        </plugin>
        
        </gazebo>
        <gazebo reference= "base_link">
          <plugin name='test_clock' filename='libclock_plugin.so'/>
        </gazebo>
<!-- =============================================colors======================================================         -->
        <gazebo reference= "base_link">
            <material>
                Gazebo/White
            </material>
        </gazebo>

        <gazebo reference= "Rwheel">
            <material>
                Gazebo/Black
            </material>
        </gazebo>
        <gazebo reference= "Lwheel">
            <material>
                Gazebo/Black
            </material>
        </gazebo>
        <gazebo reference= "custer_wheel1">
            <material>
                Gazebo/Gray
            </material>
        </gazebo>
        <gazebo reference= "custer_wheel2">
            <material>
                Gazebo/Gray
            </material>
        </gazebo>
        <gazebo reference= "custer_wheel3">
            <material>
                Gazebo/Gray
            </material>
        </gazebo>
        <gazebo reference= "custer_wheel4">
            <material>
                Gazebo/Gray
            </material>
        </gazebo>
        <gazebo reference= "lidar">
            <material>
                Gazebo/Black
            </material>
        </gazebo>
        <!-- <gazebo reference= "depth">
            <material>
                Gazebo/Black
            </material>
        </gazebo>
        <gazebo reference= "sonar1">
            <material>
                Gazebo/Black
            </material>
        </gazebo>
        <gazebo reference= "sonar2">
            <material>
                Gazebo/Black
            </material>
        </gazebo>
        <gazebo reference= "sonar3">
            <material>
                Gazebo/Black
            </material>
        </gazebo> -->

<gazebo reference="custer_wheel1">
  <mu1>0</mu1>
  <mu2>0</mu2>
  <slip1>1.0</slip1>
  <slip2>1.0</slip2>
</gazebo>
<gazebo reference="custer_wheel2">
  <mu1>0</mu1>
  <mu2>0</mu2>
  <slip1>1.0</slip1>
  <slip2>1.0</slip2>
</gazebo>
<gazebo reference="custer_wheel3">
  <mu1>0</mu1>
  <mu2>0</mu2>
  <slip1>1.0</slip1>
  <slip2>1.0</slip2>
</gazebo>
<gazebo reference="custer_wheel4">
  <mu1>0</mu1>
  <mu2>0</mu2>
  <slip1>1.0</slip1>
  <slip2>1.0</slip2>
</gazebo>


<!-- =======================================lidar============================================ -->

 <!-- hokuyo -->
<gazebo reference="lidar">
    <sensor type="gpu_ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>100</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle>
            <max_angle>6.28</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/scan</topicName>
        <frameName>lidar</frameName>
      </plugin>
    </sensor>
  </gazebo>

<!-- ========================================collision ================================================== -->

<gazebo reference="base_link">
<sensor name="main_bumper" type="contact">
<geom>base_geom</geom>
    <selfCollide>true</selfCollide>
    <alwaysOn>true</alwaysOn>
    <updateRate>100.0</updateRate>
    <material>Gazebo/Red</material>
    <contact>
        <!-- the collision name found using "gz sdf -p PKG_FROM_SOLIDWORKS.urdf.xacro" -->
       <collision>base_link_collision</collision> 
    </contact>
    <plugin name="gazebo_ros_bumper_controller" filename="libgazebo_ros_bumper.so">   
        <bumperTopicName>collision/bumper_vals</bumperTopicName>
        <frameName>world</frameName>
    </plugin>
</sensor>
</gazebo>

  <!-- ==================================caters settings========================================= -->
<link name="custer_wheel1">
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="0.002" ixy="0.0" ixz="0.0" iyy="0.002" iyz="0.0" izz="0.002"/>
    </inertial>

    <visual name="">
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
         <sphere radius="0.025"/>
      </geometry>

      <material name="">
        <color rgba="1.0 0.0 0.0 1.0"/>
        <texture filename=""/>
      </material>
    </visual>

    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <sphere radius="0.025"/>
      </geometry>
    </collision>
  </link>
  <link name="custer_wheel2">
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="0.002" ixy="0.0" ixz="0.0" iyy="0.002" iyz="0.0" izz="0.002"/>
    </inertial>

    <visual name="">
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
         <sphere radius="0.025"/>
      </geometry>

      <material name="">
        <color rgba="1.0 0.0 0.0 1.0"/>
        <texture filename=""/>
      </material>
    </visual>

    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <sphere radius="0.025"/>
      </geometry>
    </collision>
  </link>
  <link name="custer_wheel3">
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="0.002" ixy="0.0" ixz="0.0" iyy="0.002" iyz="0.0" izz="0.002"/>
    </inertial>

    <visual name="">
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
         <sphere radius="0.025"/>
      </geometry>

      <material name="">
        <color rgba="1.0 0.0 0.0 1.0"/>
        <texture filename=""/>
      </material>
    </visual>

    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <sphere radius="0.025"/>
      </geometry>
    </collision>
  </link>
  <link name="custer_wheel4">
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="0.002" ixy="0.0" ixz="0.0" iyy="0.002" iyz="0.0" izz="0.002"/>
    </inertial>

    <visual name="">
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
         <sphere radius="0.025"/>
      </geometry>

      <material name="">
        <color rgba="1.0 0.0 0.0 1.0"/>
        <texture filename=""/>
      </material>
    </visual>

    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <sphere radius="0.025"/>
      </geometry>
    </collision>
  </link>

  <link name="depth">
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="0.002" ixy="0.0" ixz="0.0" iyy="0.002" iyz="0.0" izz="0.002"/>
    </inertial>



    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <sphere radius="0.025"/>
      </geometry>
    </collision>
  </link>
<!-- ===================================custer joints========================================== -->
  <joint name="custer_joint1" type="fixed">
    <origin xyz="0.1 0.1 -0.038" rpy="0.0 0.0 0.0"/>
    <parent link="base_link"/>
    <child link="custer_wheel1"/>
    <axis xyz="0.0 0.0 0.0"/>
    <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0"/>
  </joint>


  <joint name="custer_joint2" type="fixed">
    <origin xyz="-0.1 -0.1 -0.038" rpy="0.0 0.0 0.0"/>
    <parent link="base_link"/>
    <child link="custer_wheel2"/>
    <axis xyz="0.0 0.0 0.0"/>
    <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0"/>
  </joint>

  <joint name="custer_joint3" type="fixed">
    <origin xyz="-0.1 0.1 -0.038" rpy="0.0 0.0 0.0"/>
    <parent link="base_link"/>
    <child link="custer_wheel3"/>
    <axis xyz="0.0 0.0 0.0"/>
    <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0"/>
  </joint>

  <joint name="custer_joint4" type="fixed">
    <origin xyz="0.1 -0.1 -0.038" rpy="0.0 0.0 0.0"/>
    <parent link="base_link"/>
    <child link="custer_wheel4"/>
    <axis xyz="0.0 0.0 0.0"/>
    <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0"/>
  </joint>

  <joint name="depthJoint" type="fixed">
    <origin xyz="0.0 0.1 0.11" rpy="0.0 0.0 1.57"/>
    <parent link="base_link"/>
    <child link="depth"/>
    <axis xyz="0.0 0.0 0.0"/>
    <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0"/>
  </joint>

<!-- ===================================depth camera============================================== -->
  <!-- <xacro:sensor_d415 name="camera" topics_ns="camera" parent="depth" publish_pointcloud="true">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:sensor_d415>   -->


<!-- ===================================sonar==================================================== -->
<!-- ranges may need to be adjusted -->
<!-- <gazebo reference="sonar1">
<sensor type="ray" name="sonar_sensor1">
  <pose>0.25 0 0 0 0 0</pose>
  <update_rate>5</update_rate>
  <ray>
    <scan>
      <horizontal>
        <samples>5</samples>
        <resolution>1.0</resolution>
        <min_angle>-0.25</min_angle>
        <max_angle>0.25</max_angle>
      </horizontal>
      <vertical>
        <samples>5</samples>
        <resolution>1</resolution>
        <min_angle>-0.25</min_angle>
        <max_angle>0.25</max_angle>
      </vertical>
    </scan>
    <range>
      <min>0.01</min>
      <max>3.0</max>
      <resolution>0.01</resolution>
    </range>
  </ray>
  <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
    <gaussianNoise>0.005</gaussianNoise>
    <alwaysOn>true</alwaysOn>
    <updateRate>5</updateRate>
    <topicName>ultrasound/sonar_1</topicName>
    <frameName>sonar1</frameName>
    <fov>0.5</fov>
    <radiation>ultrasound</radiation>
  </plugin>
</sensor>
</gazebo>

<gazebo reference="sonar2">
  <sensor type="ray" name="sonar_sensor1">
    <pose>0.25 0 0 0 0 0</pose>
    <update_rate>5</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>5</samples>
          <resolution>1.0</resolution>
          <min_angle>-0.25</min_angle>
          <max_angle>0.25</max_angle>
        </horizontal>
        <vertical>
          <samples>5</samples>
          <resolution>1</resolution>
          <min_angle>-0.25</min_angle>
          <max_angle>0.25</max_angle>
        </vertical>
      </scan>
      <range>
        <min>0.01</min>
        <max>3.0</max>
        <resolution>0.01</resolution>
      </range>
    </ray>
    <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
      <gaussianNoise>0.005</gaussianNoise>
      <alwaysOn>true</alwaysOn>
      <updateRate>5</updateRate>
      <topicName>ultrasound/sonar_2</topicName>
      <frameName>sonar2</frameName>
      <fov>0.5</fov>
      <radiation>ultrasound</radiation>
    </plugin>
  </sensor>
  </gazebo>

  <gazebo reference="sonar3">
    <sensor type="ray" name="sonar_sensor1">
      <pose>0.25 0 0 0 0 0</pose>
      <update_rate>5</update_rate>
      <ray> 
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.25</min_angle>
            <max_angle>0.25</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.25</min_angle>
            <max_angle>0.25</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>3.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>5</updateRate>
        <topicName>ultrasound/sonar_3</topicName>
        <frameName>sonar3</frameName>
        <fov>0.5</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
    </gazebo> -->

</robot>
